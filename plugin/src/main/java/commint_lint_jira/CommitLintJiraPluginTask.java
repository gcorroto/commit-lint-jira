/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package commint_lint_jira;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;

import org.gradle.api.DefaultTask;
import org.gradle.api.tasks.TaskAction;
import org.gradle.api.tasks.TaskExecutionException;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import commint_lint_jira.dto.CommitLintJiraRestModel;
import commint_lint_jira.rest.CommitLintJiraRest;

/**
 * A simple 'hello world' plugin.
 */
public class CommitLintJiraPluginTask  extends DefaultTask {

private final Logger log = LoggerFactory.getLogger(this.getClass());

	@TaskAction

	public void samplePluginTasks() throws TaskExecutionException {

		log.info("Starting  sample task");

		try {

		CommitLintJiraRestModel extension = getProject().getExtensions().findByType(CommitLintJiraRestModel.class); 

		String user = extension.getUser();
		String pass = extension.getPassword();
		String domain = extension.getDomain();
		String url = extension.getUrl();

		
		CommitLintJiraRest rest = new CommitLintJiraRest(extension);
		if(rest.authJira()) {
			File file = new File(System.getProperty("msgfile", ".git/COMMIT_EDITMSG"));
			String keyJira = extractKeyJira(readFile(file));
			String infoJira = rest.getInfoJira(keyJira);
			log.info("Successfully completed sample Task infoJira " + infoJira);
		}

		/* Here comes your Main Logic*/

		log.info("Successfully completed sample Task");

		}catch(Exception e){

			log.error("",e);

			throw new TaskExecutionException(this,new Exception("Exception occured while processing sampleTask",e));

		}
	}

	private String extractKeyJira(String msg){
		String key = msg.split(" ")[0];
		return  key.trim().toUpperCase();
	}

	private String readFile(File file) throws IOException {
		String texto = "";
		BufferedReader br = new BufferedReader(new FileReader(file));

			// Declaring a string variable
			String st;
			// Condition holds true till
			// there is character in a string
			while ((st = br.readLine()) != null){
					// Print the string
						texto.concat(st);
			}
						return texto;
	}
}